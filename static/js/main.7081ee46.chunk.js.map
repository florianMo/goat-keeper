{"version":3,"sources":["models/event.ts","models/index.ts","models/player.ts","models/game.ts","components/Layout/Topbar.tsx","components/Pages/GameList/SetResults.tsx","store/slices/gameSlice.ts","components/Pages/GameList/GameList.tsx","components/Pages/Home/Home.tsx","components/Pages/NewGame/NewGame.tsx","components/Pages/Home/ActionButton.tsx","components/Pages/ScoreBoard/PlayerButton.tsx","components/Pages/ScoreBoard/ActionGrid.tsx","components/Pages/ScoreBoard/ScoreEditor.tsx","components/Pages/ScoreBoard/LastEvents.tsx","components/Pages/ScoreBoard/SetSelector.tsx","components/Pages/ScoreBoard/Game.tsx","components/Pages/Stats/PlayerRadar.tsx","components/Pages/Stats/SetTimeChart.tsx","components/Pages/Stats/TeamStats.tsx","components/Pages/Stats/StatCell.tsx","components/Pages/Stats/TeamTableStats.tsx","components/Pages/Stats/GameStats.tsx","components/Pages/TeamManagement/TeamManagement.tsx","routing/routes.tsx","routing/RouteAndSubRoute.tsx","components/App.tsx","serviceWorker.ts","store/store.ts","index.tsx"],"names":["GameEventType","readable","type","short","ACE","ATTACK","BLOCK","DIG","PASS","RECEPTION","SERVICE","gameEvents","getKey","player","name","number","MAX_SCORE","MIN_SCORE","displayName","game","team1","team2","getSetDuration","set","events","length","dayjs","at","diff","getTotalDuration","sets","reduce","total","sortGames","game1","game2","localeCompare","countEvents","generateDemoGame","frenchTeam","id","uuidv4","format","players","currentTime","setIndex","push","team1Score","team2Score","nbEvents","getRandomBetween","eventType","positive","Math","random","add","T1_SCORE_UPDATE","value","T2_SCORE_UPDATE","min","max","toFixed","Topbar","history","useHistory","StyledTopbar","className","onClick","Urls","HOME","placement","title","size","icon","faList","GAME_LIST","faPlusCircle","NEW_GAME","to","pathname","target","faGithub","styled","div","cyan","SetResults","props","StyledSetResults","map","index","key","blue","lime","red","gameAdapter","createEntityAdapter","gameInitialState","getInitialState","gameSlice","createSlice","initialState","reducers","addGame","state","action","addOne","payload","deleteGame","removeOne","addPlayer","_","cloneDeep","updateOne","changes","deletePlayer","playerProperties","playerKey","split","parseInt","filter","p","incrementTeam1","incrementTeam2","decrementTeam1","decrementTeam2","addSet","addEvent","event","removeEvent","e","isEqual","actions","Title","Typography","StyledGameList","StyledHome","NewGame","dispatch","useDispatch","Form","useForm","form","style","padding","StyledNewGame","colLayout","level","layout","onFinish","uuid","getFieldValue","buildUrl","GAME","parameter","Item","label","rules","required","message","validateTrigger","List","fields","remove","field","align","fieldKey","placeholder","step","faTrash","block","faPlus","htmlType","ActionButton","StyledActionButton","PlayerButton","StyledPlayerButton","ActionGrid","useState","undefined","eventClicked","setEventClicked","handleActionClicked","positiveEvents","Object","values","includes","negativeEvents","StyledActionGrid","team","onAddAction","handlePlayerClicked","LeaderCode","LastEvents","eventsToDisplay","slice","reverse","StyledLastEvents","timeFormat","faAngleRight","faTimes","onDeleteEvent","grey","ScoreEditor","leader","t1Score","t2Score","T1","T2","EQ","StyedScoreEditor","faChevronUp","onIncrementT1","faChevronDown","onDecrementT1","onIncrementT2","onDecrementT2","SetSelector","StyledSetSelector","Group","onChange","onSetChanged","selectedSet","buttonStyle","Button","onAddSet","StyledGame","PlayerRadar","playerName","playerStats","data","s","outerRadius","width","height","margin","top","right","bottom","left","fontSize","x","y","dominantBaseline","textAnchor","dataKey","angle","domain","tick","stroke","fill","fillOpacity","formatter","SetTimeChart","t1Data","time","valueOf","scoreEvents","t1LastScore","t2LastScore","forEach","lineProps","strokeWidth","activeDot","r","dot","yDomain","isFifthSet","yTicks","strokeDasharray","tickFormatter","timestamp","ticks","labelFormatter","TeamStats","getStatPercentage","percentages","scored","lost","StyledTeamStats","t","orange","yellow","StatCell","StyledStatCell","percentage","faStar","TeamTableStats","columns","render","stat","sorter","a","b","getPerformanceClass","stats","children","StyledTeamTableStats","bordered","dataSource","pagination","border","borderRed","borderOrange","borderYellow","borderLime","StyledGameStats","StyledTeamTable","GAME_STATS","TEAM_MANAGEMENT","DEFAULT","routes","path","exact","component","xs","span","offset","lg","useParams","useSelector","games","entities","setSet","dateFormat","md","success","isBefore","faSearch","faChartLine","faFileExport","onConfirm","okText","cancelText","allEvents","flat","gutter","Fragment","find","dataIndex","record","some","error","resetFields","redirectTo","base","parameters","param","replace","toString","RouteAndSubRoute","route","App","basename","process","Boolean","window","location","hostname","match","rootReducer","combineReducers","reducer","persistConfig","storage","whitelist","stateReconciler","autoMergeLevel2","pReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7081ee46.chunk.js","sourcesContent":["import { Player } from './player';\n\nexport interface GameEvent {\n  type: GameEventType;\n  positive?: boolean;\n  player?: Player;\n  value?: number;\n  at?: string;\n}\n\nexport enum GameEventType {\n  SERVICE = 'SERVICE',\n  RECEPTION = 'RECEPTION',\n  PASS = 'PASS',\n  ATTACK = 'ATTACK',\n  BLOCK = 'BLOCK',\n  DIG = 'DIG',\n  ACE = 'ACE',\n  T1_SCORE_UPDATE = 'T1_SCORE_UPDATE',\n  T2_SCORE_UPDATE = 'T2_SCORE_UPDATE',\n}\n\nexport const readable = (type: GameEventType, short = false): string => {\n  switch (type) {\n    case GameEventType.ACE:\n      return 'Ace';\n    case GameEventType.ATTACK:\n      return short ? 'Att.' : 'Attaque';\n    case GameEventType.BLOCK:\n      return short ? 'Bl.' : 'Block';\n    case GameEventType.DIG:\n      return short ? 'Déf.' : 'Défense';\n    case GameEventType.PASS:\n      return short ? 'Pa.' : 'Passe';\n    case GameEventType.RECEPTION:\n      return short ? 'Réc.' : 'Réception';\n    case GameEventType.SERVICE:\n      return short ? 'Ser.' : 'Service';\n  }\n\n  return type;\n};\n\nexport const gameEvents = [\n  GameEventType.SERVICE,\n  GameEventType.RECEPTION,\n  GameEventType.PASS,\n  GameEventType.ATTACK,\n  GameEventType.BLOCK,\n  GameEventType.DIG,\n  GameEventType.ACE,\n];\n","export * from './event';\nexport * from './game';\nexport * from './player';\nexport * from './team';\n","export interface Player {\n  name: string;\n  number: number;\n}\n\nexport const getKey = (player: Player): string => player.name + ':' + player.number;\n","import dayjs from 'dayjs';\nimport { GameEvent, gameEvents, GameEventType, Player, Team } from 'src/models';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const MAX_SCORE = 99;\nexport const MIN_SCORE = 0;\n\nexport interface Game {\n  id: string;\n  team1: Team;\n  team2: Team;\n  sets: GameSet[];\n  at: string;\n}\n\nexport interface GameSet {\n  team1Score: number;\n  team2Score: number;\n  events: GameEvent[];\n  at: string;\n}\n\nexport const isWon = (game: Game): boolean => {\n  return (\n    game.sets.filter((set) => set.team1Score > set.team2Score).length >\n    game.sets.filter((set) => set.team1Score < set.team2Score).length\n  );\n};\n\nexport const displayName = (game: Game): string => game.team1.name + ' vs ' + game.team2.name;\n\nexport const getSetDuration = (set: GameSet): number =>\n  set.events.length < 2 ? 0 : dayjs(set.events[set.events.length - 1].at).diff(set.events[0].at, 'minute');\n\nexport const getTotalDuration = (game: Game): number =>\n  game.sets.reduce((total, set) => total + getSetDuration(set), 0);\n\nexport const sortGames = (game1: Game, game2: Game): number =>\n  (game1.team1.name + game1.team2.name).localeCompare(game2.team1.name + game2.team2.name);\n\nexport const countEvents = (game: Game): number => game.sets.reduce((total, set) => total + set.events.length, 0);\n\nexport const generateDemoGame = (): Game => {\n  const frenchTeam: Player[] = [\n    { name: 'Jenia Grebennikov', number: 2 },\n    { name: 'Jean Patry', number: 4 },\n    { name: 'Benjamin Toniutti', number: 6 },\n    { name: 'Kévin Tillie', number: 7 },\n    { name: 'Julien Lyneel', number: 8 },\n    { name: 'Earvin Ngapeth', number: 9 },\n    { name: 'Kévin Le Roux', number: 10 },\n    { name: 'Antoine Brizard', number: 11 },\n    { name: 'Stephen Boyer', number: 12 },\n    { name: 'Nicolas Le Goff', number: 14 },\n    { name: 'Daryl Bultor', number: 16 },\n    { name: 'Trévor Clévenot', number: 17 },\n    { name: 'Thibault Rossard', number: 18 },\n    { name: 'Barthélémy Chinenyeze', number: 21 },\n  ];\n\n  const game: Game = {\n    id: uuidv4(),\n    at: dayjs().format(),\n    team1: { name: 'France', players: frenchTeam },\n    team2: { name: 'Slovénie', players: [] },\n    sets: [],\n  };\n\n  let currentTime = dayjs();\n  let setIndex = 0;\n  do {\n    game.sets.push({ team1Score: 0, team2Score: 0, events: [], at: currentTime.format() });\n\n    do {\n      // generate between 1 and 8 random game event per point, separated by [5-15] seconds\n      let nbEvents = getRandomBetween(1, 10);\n\n      do {\n        const eventType = gameEvents[getRandomBetween(0, gameEvents.length - 1)];\n        game.sets[setIndex].events.push({\n          player: frenchTeam[getRandomBetween(0, frenchTeam.length - 1)],\n          type: eventType,\n          positive: Math.random() < 0.5 || eventType === GameEventType.ACE,\n          at: currentTime.format(),\n        });\n\n        currentTime = currentTime.add(getRandomBetween(5, 15), 'second');\n        nbEvents--;\n      } while (nbEvents > 0);\n\n      // generate scoring event\n      if (Math.random() < 0.5) {\n        game.sets[setIndex].team1Score++;\n        game.sets[setIndex].events.push({\n          type: GameEventType.T1_SCORE_UPDATE,\n          value: game.sets[setIndex].team1Score,\n          at: currentTime.format(),\n        });\n      } else {\n        game.sets[setIndex].team2Score++;\n        game.sets[setIndex].events.push({\n          type: GameEventType.T2_SCORE_UPDATE,\n          value: game.sets[setIndex].team2Score,\n          at: currentTime.format(),\n        });\n      }\n    } while (\n      // this may generate impossible things like useless 4th/5th sets or scores like 25-24. No big deal, demo purpose\n      (setIndex < 4 && game.sets[setIndex].team1Score < 25 && game.sets[setIndex].team2Score < 25) ||\n      (setIndex === 4 && game.sets[setIndex].team1Score < 15 && game.sets[setIndex].team2Score < 15)\n    );\n\n    currentTime = currentTime.add(getRandomBetween(5, 30), 'second');\n    setIndex++;\n  } while (setIndex < 5);\n\n  return game;\n};\n\nexport const getRandomBetween = (min: number, max: number): number => +(Math.random() * (max - min) + min).toFixed(0);\n","import { cyan } from '@ant-design/colors';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faList, faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Tooltip } from 'antd';\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Urls } from 'src/routing';\nimport styled from 'styled-components';\n\nexport const Topbar = (): JSX.Element => {\n  const history = useHistory();\n\n  return (\n    <StyledTopbar>\n      <span className=\"brand\" onClick={(): void => history.push(Urls.HOME)}>\n        Goat keeper\n      </span>\n      <div className=\"actions\">\n        <Tooltip placement=\"left\" title=\"matchs précédents\">\n          <FontAwesomeIcon size=\"lg\" icon={faList} onClick={(): void => history.push(Urls.GAME_LIST)} />\n        </Tooltip>\n        <Tooltip placement=\"left\" title=\"nouveau match\">\n          <FontAwesomeIcon size=\"lg\" icon={faPlusCircle} onClick={(): void => history.push(Urls.NEW_GAME)} />\n        </Tooltip>\n        <Link to={{ pathname: 'https://github.com/florianMo/goat-keeper' }} target=\"_blank\">\n          <FontAwesomeIcon size=\"lg\" icon={faGithub} />\n        </Link>\n      </div>\n    </StyledTopbar>\n  );\n};\n\nconst StyledTopbar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 80px;\n  background: linear-gradient(to right, ${cyan[9]}, ${cyan[6]});\n  margin-bottom: 16px;\n\n  > span {\n    color: white;\n  }\n\n  .brand {\n    display: flex;\n    align-items: center;\n    font-family: 'Pacifico';\n    margin-left: 24px;\n    font-size: 30px;\n    cursor: pointer;\n\n    img {\n      width: 30px;\n      margin-left: 15px;\n    }\n  }\n\n  .actions svg {\n    color: white;\n    margin-right: 24px;\n    cursor: pointer;\n    transition: 0.3s ease-in-out;\n\n    &:hover {\n      color: ${cyan[8]};\n    }\n  }\n`;\n","import { blue, lime, red } from '@ant-design/colors';\nimport React from 'react';\nimport { Game } from 'src/models/game';\nimport styled from 'styled-components';\n\ninterface SetResultProps {\n  game: Game;\n}\n\nexport const SetResults: React.FC<SetResultProps> = (props: SetResultProps): JSX.Element => {\n  return (\n    <StyledSetResults>\n      {props.game.sets.map((set, index) => (\n        <span\n          key={index}\n          className={set.team1Score > set.team2Score ? 'won' : set.team1Score < set.team2Score ? 'lost' : ''}\n        >\n          {set.team1Score}•{set.team2Score}\n        </span>\n      ))}\n    </StyledSetResults>\n  );\n};\n\nconst StyledSetResults = styled.div`\n  display: flex;\n\n  span {\n    padding: 2px 4px;\n    margin-left: 4px;\n    border-radius: 4px;\n    text-align: center;\n    color: white;\n    font-weight: 700;\n    background-color: ${blue[4]};\n\n    &.won {\n      background-color: ${lime[7]};\n    }\n\n    &.lost {\n      background-color: ${red[6]};\n    }\n  }\n`;\n","import { createEntityAdapter, createSlice, EntityState, PayloadAction } from '@reduxjs/toolkit';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport { Game } from 'src/models';\nimport { GameEvent, GameEventType } from 'src/models/event';\nimport { Player } from 'src/models/player';\n\nexport const gameAdapter = createEntityAdapter<Game>();\n\nexport interface GameState extends EntityState<Game> {\n  total: number;\n}\n\nexport const gameInitialState: GameState = {\n  ...gameAdapter.getInitialState(),\n  total: 0,\n};\n\nexport const gameSlice = createSlice({\n  name: 'games',\n  initialState: gameInitialState,\n  reducers: {\n    addGame: (state: GameState, action: PayloadAction<Game>): void => {\n      gameAdapter.addOne(state, action.payload);\n    },\n    deleteGame: (state: GameState, action: PayloadAction<string>): void => {\n      gameAdapter.removeOne(state, action.payload);\n    },\n    addPlayer: (state: GameState, action: PayloadAction<{ game: Game; player: Player }>): void => {\n      const game = _.cloneDeep(action.payload.game);\n      game.team1.players.push(action.payload.player);\n      gameAdapter.updateOne(state, { id: game.id, changes: game });\n    },\n    deletePlayer: (state: GameState, action: PayloadAction<{ game: Game; playerKey: string }>): void => {\n      const game = _.cloneDeep(action.payload.game);\n      const playerProperties = action.payload.playerKey.split(':');\n      const player: Player = { name: playerProperties[0], number: parseInt(playerProperties[1], 10) };\n      game.team1.players = game.team1.players.filter((p) => player.name !== p.name && player.number !== p.number);\n      gameAdapter.updateOne(state, { id: game.id, changes: game });\n    },\n    incrementTeam1: (state: GameState, action: PayloadAction<{ game: Game; set: number }>): void => {\n      const game = _.cloneDeep(action.payload.game);\n      game.sets[action.payload.set].team1Score++;\n      game.sets[action.payload.set].events.push({\n        type: GameEventType.T1_SCORE_UPDATE,\n        value: game.sets[action.payload.set].team1Score,\n        at: dayjs().format(),\n      });\n      gameAdapter.updateOne(state, { id: game.id, changes: game });\n    },\n    incrementTeam2: (state: GameState, action: PayloadAction<{ game: Game; set: number }>): void => {\n      const game = _.cloneDeep(action.payload.game);\n      game.sets[action.payload.set].team2Score++;\n      game.sets[action.payload.set].events.push({\n        type: GameEventType.T2_SCORE_UPDATE,\n        value: game.sets[action.payload.set].team2Score,\n        at: dayjs().format(),\n      });\n      gameAdapter.updateOne(state, { id: game.id, changes: game });\n    },\n    decrementTeam1: (state: GameState, action: PayloadAction<{ game: Game; set: number }>): void => {\n      const game = _.cloneDeep(action.payload.game);\n      game.sets[action.payload.set].team1Score--;\n      game.sets[action.payload.set].events.push({\n        type: GameEventType.T1_SCORE_UPDATE,\n        value: game.sets[action.payload.set].team1Score,\n        at: dayjs().format(),\n      });\n      gameAdapter.updateOne(state, { id: game.id, changes: game });\n    },\n    decrementTeam2: (state: GameState, action: PayloadAction<{ game: Game; set: number }>): void => {\n      const game = _.cloneDeep(action.payload.game);\n      game.sets[action.payload.set].team2Score--;\n      game.sets[action.payload.set].events.push({\n        type: GameEventType.T2_SCORE_UPDATE,\n        value: game.sets[action.payload.set].team2Score,\n        at: dayjs().format(),\n      });\n      gameAdapter.updateOne(state, { id: game.id, changes: game });\n    },\n    addSet: (state: GameState, action: PayloadAction<Game>): void => {\n      const game = _.cloneDeep(action.payload);\n      game.sets.push({ team1Score: 0, team2Score: 0, events: [], at: dayjs().format() });\n      gameAdapter.updateOne(state, { id: game.id, changes: game });\n    },\n    addEvent: (state: GameState, action: PayloadAction<{ game: Game; set: number; event: GameEvent }>): void => {\n      const game = _.cloneDeep(action.payload.game);\n      game.sets[action.payload.set].events.push(action.payload.event);\n      gameAdapter.updateOne(state, { id: game.id, changes: game });\n    },\n    removeEvent: (state: GameState, action: PayloadAction<{ game: Game; set: number; event: GameEvent }>): void => {\n      const game = _.cloneDeep(action.payload.game);\n      game.sets[action.payload.set].events = game.sets[action.payload.set].events.filter(\n        (e) => !_.isEqual(e, action.payload.event)\n      );\n      gameAdapter.updateOne(state, { id: game.id, changes: game });\n    },\n  },\n});\n\nexport const {\n  addEvent,\n  addGame,\n  addPlayer,\n  addSet,\n  decrementTeam1,\n  decrementTeam2,\n  deleteGame,\n  deletePlayer,\n  incrementTeam1,\n  incrementTeam2,\n  removeEvent,\n} = gameSlice.actions;\n","/* eslint-disable react/display-name */\nimport { cyan, red } from '@ant-design/colors';\nimport { faChartLine, faFileExport, faSearch, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Col, Popconfirm, Row, Table, Tooltip, Typography } from 'antd';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { colLayout, dateFormat } from 'src/components/App';\nimport { Topbar } from 'src/components/Layout/Topbar';\nimport { SetResults } from 'src/components/Pages/GameList/SetResults';\nimport { countEvents, displayName, Game, sortGames } from 'src/models/game';\nimport { buildUrl, Urls } from 'src/routing';\nimport { deleteGame } from 'src/store/slices/gameSlice';\nimport { RootState } from 'src/store/store';\nimport styled from 'styled-components';\n\nconst { Title } = Typography;\n\nexport const GameList = (): JSX.Element => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const games = useSelector((state: RootState) => state.games.entities);\n\n  const columns = [\n    {\n      title: 'Date',\n      render: (game: Game): string => dayjs(game.at).format(dateFormat),\n      className: 'fit-content',\n      sorter: (game1: Game, game2: Game): number => (dayjs(game1.at).isBefore(game2.at) ? -1 : 1),\n    },\n    { title: 'Match', render: displayName, sorter: sortGames },\n    { title: 'Résultat', render: (game: Game): JSX.Element => <SetResults game={game} /> },\n    {\n      title: 'Evts',\n      sorter: (game1: Game, game2: Game): number => (countEvents(game1) > countEvents(game2) ? -1 : 1),\n      render: countEvents,\n    },\n    {\n      key: 'actions',\n      className: 'actions fit-content',\n      render: (game: Game): JSX.Element => (\n        <>\n          <Tooltip title=\"editer le score et les stats\">\n            <FontAwesomeIcon\n              icon={faSearch}\n              size=\"lg\"\n              onClick={(): void => history.push(buildUrl(Urls.GAME, [{ parameter: 'id', value: game.id }]))}\n            />\n          </Tooltip>\n          <Tooltip title=\"visualiser les données du match\">\n            <FontAwesomeIcon\n              icon={faChartLine}\n              size=\"lg\"\n              onClick={(): void => history.push(buildUrl(Urls.GAME_STATS, [{ parameter: 'id', value: game.id }]))}\n            />\n          </Tooltip>\n          <Tooltip title=\"exporter les données du match\">\n            <FontAwesomeIcon className=\"disabled\" icon={faFileExport} size=\"lg\" />\n          </Tooltip>\n          <Tooltip title=\"supprimer le match\">\n            <Popconfirm\n              title={'sûr ?'}\n              onConfirm={(): any => dispatch(deleteGame(game.id))}\n              okText=\"Oui\"\n              cancelText=\"Non en fait\"\n            >\n              <FontAwesomeIcon icon={faTrash} size=\"lg\" />\n            </Popconfirm>\n          </Tooltip>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <Topbar />\n\n      <div style={{ padding: 16 }}>\n        <StyledGameList>\n          <Row>\n            <Col {...colLayout}>\n              <Title level={2}>Matchs enregistrés sur ce navigateur</Title>\n              <Table\n                size=\"small\"\n                bordered={true}\n                dataSource={Object.values(games).map((game) => {\n                  return { ...game, key: game.id };\n                })}\n                columns={columns}\n                pagination={false}\n              ></Table>\n            </Col>\n\n            <Col className=\"button\" {...colLayout}>\n              <Button size=\"large\" type=\"primary\" block onClick={(): void => history.push(Urls.NEW_GAME)}>\n                Nouveau match\n              </Button>\n            </Col>\n          </Row>\n        </StyledGameList>\n      </div>\n    </>\n  );\n};\n\nconst StyledGameList = styled.div`\n  height: calc(100vh - 80px);\n\n  .actions {\n    svg {\n      cursor: pointer;\n      margin-right: 8px;\n      transition: 0.3s all;\n\n      &:hover {\n        color: ${cyan[8]};\n      }\n\n      &[data-icon='trash']:hover {\n        color: ${red[5]};\n      }\n    }\n  }\n\n  .fit-content {\n    width: 1%;\n    white-space: nowrap;\n  }\n\n  button {\n    margin-top: 16px;\n  }\n\n  .disabled {\n    opacity: 0.5;\n    cursor: not-allowed !important;\n  }\n`;\n","import { Button, Col, Row } from 'antd';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Topbar } from 'src/components/Layout/Topbar';\nimport { generateDemoGame } from 'src/models';\nimport { buildUrl, Urls } from 'src/routing';\nimport { addGame } from 'src/store/slices/gameSlice';\nimport styled from 'styled-components';\n\nexport const Home = (): JSX.Element => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleGenerateDemoGame = (): void => {\n    const game = generateDemoGame();\n    dispatch(addGame(game));\n    history.push(buildUrl(Urls.GAME_STATS, [{ parameter: 'id', value: game.id }]));\n  };\n\n  return (\n    <>\n      <Topbar />\n      <StyledHome>\n        <Row>\n          <Col xs={{ span: 20, offset: 2 }} lg={{ span: 12, offset: 6 }}>\n            <Button block size=\"large\" type=\"primary\" onClick={(): void => history.push(Urls.NEW_GAME)}>\n              Nouveau match\n            </Button>\n            <Button block size=\"large\" type=\"primary\" onClick={(): void => history.push(Urls.GAME_LIST)}>\n              Matchs précédents\n            </Button>\n            <Button block size=\"large\" onClick={handleGenerateDemoGame}>\n              Générer un match démo\n            </Button>\n          </Col>\n        </Row>\n      </StyledHome>\n    </>\n  );\n};\n\nconst StyledHome = styled.div`\n  height: calc(100vh - 80px);\n\n  button {\n    font-size: 24px;\n    margin-top: 24px;\n    font-weight: bold;\n    height: 100px;\n  }\n`;\n","import { red } from '@ant-design/colors';\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Col, Form, Input, InputNumber, Row, Space, Typography } from 'antd';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { colLayout } from 'src/components/App';\nimport { Topbar } from 'src/components/Layout/Topbar';\nimport { GameSet } from 'src/models/game';\nimport { Team } from 'src/models/team';\nimport { buildUrl, Urls } from 'src/routing';\nimport { addGame } from 'src/store/slices/gameSlice';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst { Title } = Typography;\n\nexport const NewGame = (): JSX.Element => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n\n  const handleSubmit = (): void => {\n    const uuid = uuidv4();\n\n    let players = form.getFieldValue('players');\n    if (!players) {\n      players = [{ name: 'Tous', number: 0 }];\n    }\n\n    const team1: Team = {\n      name: form.getFieldValue('team1'),\n      players: players,\n    };\n\n    const team2: Team = {\n      name: form.getFieldValue('team2'),\n      players: [],\n    };\n\n    const sets: GameSet[] = [\n      {\n        team1Score: 0,\n        team2Score: 0,\n        events: [],\n        at: dayjs().format(),\n      },\n    ];\n\n    dispatch(addGame({ id: uuid, team1: team1, team2: team2, sets: sets, at: dayjs().format() }));\n    history.push(buildUrl(Urls.GAME, [{ parameter: 'id', value: uuid }]));\n  };\n\n  return (\n    <>\n      <Topbar />\n\n      <div style={{ padding: 16 }}>\n        <StyledNewGame>\n          <Row>\n            <Col {...colLayout}>\n              <Title level={2}>Nouveau match</Title>\n              <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n                <Form.Item\n                  name=\"team1\"\n                  label=\"Ton équipe\"\n                  rules={[{ required: true, message: 'requis' }]}\n                  validateTrigger={['onChange', 'onBlur']}\n                >\n                  <Input size=\"large\" />\n                </Form.Item>\n\n                <Form.Item\n                  name=\"team2\"\n                  label=\"L'autre équipe\"\n                  rules={[{ required: true, message: 'requis' }]}\n                  validateTrigger={['onChange', 'onBlur']}\n                >\n                  <Input size=\"large\" />\n                </Form.Item>\n\n                <Form.List name=\"players\">\n                  {(fields, { add, remove }): JSX.Element => {\n                    return (\n                      <div>\n                        {fields.map((field) => (\n                          <Space key={field.key} align=\"start\">\n                            <Form.Item\n                              {...field}\n                              name={[field.name, 'name']}\n                              fieldKey={[field.fieldKey, 'name']}\n                              rules={[{ required: true, message: 'requis' }]}\n                              label=\"Nom\"\n                            >\n                              <Input placeholder=\"nom du joueur\" size=\"large\" />\n                            </Form.Item>\n\n                            <Form.Item\n                              {...field}\n                              name={[field.name, 'number']}\n                              fieldKey={[field.fieldKey, 'number']}\n                              rules={[{ required: true, message: 'requis' }]}\n                              label=\"Numéro\"\n                            >\n                              <InputNumber min={0} step=\"1\" size=\"large\" />\n                            </Form.Item>\n\n                            {fields.length > 1 ? (\n                              <FontAwesomeIcon\n                                icon={faTrash}\n                                size=\"lg\"\n                                className=\"dynamic-delete-button\"\n                                onClick={(): void => remove(field.name)}\n                              />\n                            ) : null}\n                          </Space>\n                        ))}\n\n                        <Form.Item className=\"add-player\">\n                          <Button\n                            block\n                            type=\"dashed\"\n                            onClick={(): void => {\n                              add();\n                            }}\n                            size=\"large\"\n                          >\n                            <FontAwesomeIcon icon={faPlus} /> Ajouter un joueur\n                          </Button>\n                        </Form.Item>\n                      </div>\n                    );\n                  }}\n                </Form.List>\n\n                <Form.Item>\n                  <Button block type=\"primary\" htmlType=\"submit\" size=\"large\">\n                    OK\n                  </Button>\n                </Form.Item>\n              </Form>\n            </Col>\n          </Row>\n        </StyledNewGame>\n      </div>\n    </>\n  );\n};\n\nconst StyledNewGame = styled.div`\n  height: calc(100vh - 80px);\n\n  .ant-space {\n    display: flex;\n    width: 100%;\n\n    .ant-space-item:nth-child(1) {\n      width: 50%;\n    }\n\n    svg.fa-trash {\n      margin-top: 42px;\n      margin-left: 8px;\n      cursor: pointer;\n\n      &:hover {\n        color: ${red[6]};\n      }\n    }\n  }\n\n  .add-player svg.fa-plus {\n    margin-right: 8px;\n  }\n`;\n\nexport default NewGame;\n","import { lime, red } from '@ant-design/colors';\nimport React from 'react';\nimport { GameEvent, readable } from 'src/models';\nimport styled from 'styled-components';\n\ninterface ActionButtonProps {\n  event: GameEvent;\n  onClick: (event: GameEvent) => void;\n}\n\nexport const ActionButton: React.FC<ActionButtonProps> = (props: ActionButtonProps): JSX.Element => {\n  return (\n    <StyledActionButton\n      positive={props.event.positive}\n      type={props.event.type}\n      onClick={(): void => props.onClick(props.event)}\n    >\n      <div className=\"label\">{readable(props.event.type)}</div>\n    </StyledActionButton>\n  );\n};\n\nconst StyledActionButton = styled.div<{ positive: boolean | undefined; type: string }>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100px;\n  padding: 16px;\n  margin: 0px 8px 8px 0px;\n  background-color: ${(props): string => (props.positive ? lime[7] : red[6])};\n  color: white;\n  border-radius: 4px;\n  cursor: pointer;\n\n  .label {\n    font-size: 24px;\n  }\n`;\n","import { cyan } from '@ant-design/colors';\nimport React from 'react';\nimport { Player } from 'src/models/player';\nimport styled from 'styled-components';\n\ninterface PlayerButtonProps {\n  player: Player;\n  onClick: (player: Player) => void;\n}\n\nexport const PlayerButton: React.FC<PlayerButtonProps> = (props: PlayerButtonProps): JSX.Element => {\n  return (\n    <StyledPlayerButton onClick={(): void => props.onClick(props.player)}>\n      <div className=\"label\">{props.player.name}</div>\n      <div className=\"number\">{props.player.number}</div>\n    </StyledPlayerButton>\n  );\n};\n\nconst StyledPlayerButton = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100px;\n  padding: 16px;\n  margin: 0px 8px 8px 0px;\n  background-color: ${cyan[6]};\n  color: white;\n  border-radius: 4px;\n  cursor: pointer;\n\n  .label {\n    font-size: 24px;\n  }\n\n  .number {\n    font-size: 32px;\n  }\n`;\n","import dayjs from 'dayjs';\nimport React, { useState } from 'react';\nimport { ActionButton } from 'src/components/Pages/Home/ActionButton';\nimport { PlayerButton } from 'src/components/Pages/ScoreBoard/PlayerButton';\nimport { GameEvent, GameEventType, Player } from 'src/models';\nimport styled from 'styled-components';\n\ninterface ActionGridProps {\n  team: Player[];\n  onAddAction: (event: GameEvent) => void;\n}\n\nexport const ActionGrid: React.FC<ActionGridProps> = (props: ActionGridProps): JSX.Element => {\n  const [eventClicked, setEventClicked]: [GameEvent | undefined, any] = useState(undefined);\n\n  const handleActionClicked = (event: GameEvent): void => {\n    setEventClicked({ ...event, at: dayjs().format() });\n  };\n\n  const handlePlayerClicked = (player: Player): void => {\n    props.onAddAction({ ...(eventClicked as any), player });\n    setEventClicked(undefined);\n  };\n\n  const positiveEvents = Object.values(GameEventType).filter(\n    (type) => ![GameEventType.T1_SCORE_UPDATE, GameEventType.T2_SCORE_UPDATE].includes(type)\n  );\n\n  const negativeEvents = Object.values(GameEventType).filter(\n    (type) => ![GameEventType.T1_SCORE_UPDATE, GameEventType.T2_SCORE_UPDATE, GameEventType.ACE].includes(type)\n  );\n\n  return (\n    <StyledActionGrid>\n      {!eventClicked && (\n        <>\n          <div className=\"topline\">\n            <span>Que s&apos;est-il passé ?</span>\n          </div>\n          <div className=\"side success\">\n            {positiveEvents.map((type) => (\n              <ActionButton key={type} event={{ type: type, positive: true }} onClick={handleActionClicked} />\n            ))}\n          </div>\n          <div className=\"side failure\">\n            {negativeEvents.map((type) => (\n              <ActionButton key={type} event={{ type: type, positive: false }} onClick={handleActionClicked} />\n            ))}\n          </div>\n        </>\n      )}\n\n      {eventClicked && (\n        <>\n          <div className=\"topline\">\n            <span>\n              Qui a {eventClicked.positive ? 'brillamment réussi' : '(encore) totalement foiré'} son geste (\n              <button className=\"link\" onClick={(): void => setEventClicked(undefined)}>\n                annuler\n              </button>\n              ) ?\n            </span>\n          </div>\n          <div className=\"players\">\n            {props.team.map((player) => (\n              <PlayerButton\n                key={player.name + ':' + player.number}\n                player={player}\n                onClick={(player): void => handlePlayerClicked(player)}\n              />\n            ))}\n          </div>\n        </>\n      )}\n    </StyledActionGrid>\n  );\n};\n\nconst StyledActionGrid = styled.div`\n  .topline {\n    width: 100%;\n    display: flex;\n    font-weight: bold;\n    justify-content: center;\n\n    span {\n      font-size: 20px;\n    }\n\n    button.link {\n      font-weight: 700;\n    }\n  }\n\n  .side,\n  .players {\n    padding: 8px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n`;\n","import { blue, cyan, lime, red } from '@ant-design/colors';\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport styled from 'styled-components';\n\nenum LeaderCode {\n  EQ = 'EQ',\n  T1 = 'T1',\n  T2 = 'T2',\n}\n\ninterface ScoreEditorProps {\n  t1Score: number;\n  t2Score: number;\n  onIncrementT1: () => void;\n  onDecrementT1: () => void;\n  onIncrementT2: () => void;\n  onDecrementT2: () => void;\n}\n\nexport const ScoreEditor: React.FC<ScoreEditorProps> = (props: ScoreEditorProps): JSX.Element => {\n  const leader: LeaderCode =\n    props.t1Score > props.t2Score ? LeaderCode.T1 : props.t1Score < props.t2Score ? LeaderCode.T2 : LeaderCode.EQ;\n\n  return (\n    <StyedScoreEditor>\n      <div className=\"side left\">\n        <div className=\"score-controls\">\n          <FontAwesomeIcon icon={faChevronUp} size=\"lg\" onClick={props.onIncrementT1} />\n          <FontAwesomeIcon icon={faChevronDown} size=\"lg\" onClick={props.onDecrementT1} />\n        </div>\n        <span className={`score t1 leader${leader}`}>{props.t1Score}</span>\n      </div>\n      <div className=\"side right\">\n        <span className={`score t2 leader${leader}`}>{props.t2Score}</span>\n        <div className=\"score-controls\">\n          <FontAwesomeIcon icon={faChevronUp} size=\"lg\" onClick={props.onIncrementT2} />\n          <FontAwesomeIcon icon={faChevronDown} size=\"lg\" onClick={props.onDecrementT2} />\n        </div>\n      </div>\n    </StyedScoreEditor>\n  );\n};\n\nconst StyedScoreEditor = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n\n  .side {\n    display: flex;\n    align-items: center;\n    user-select: none;\n\n    svg {\n      transition: 0.3s all;\n      color: ${cyan[8]};\n\n      &:hover {\n        color: ${cyan[6]};\n      }\n    }\n\n    .score {\n      width: 80px;\n      text-align: center;\n      font-size: 44px;\n      font-weight: 700;\n      padding: 4px;\n      background-color: ${blue[4]};\n      color: white;\n\n      &.t1.leaderT1,\n      &.t2.leaderT2 {\n        background-color: ${lime[7]};\n      }\n\n      &.t1.leaderT2,\n      &.t2.leaderT1 {\n        background-color: ${red[6]};\n      }\n    }\n\n    .score-controls {\n      width: 40px;\n      padding: 4px;\n      display: flex;\n      flex-direction: column;\n      background-color: ${cyan[8]};\n\n      svg {\n        color: white;\n        margin: 8px;\n        cursor: pointer;\n        transition: 0.3s all;\n\n        &:hover {\n          color: ${cyan[7]};\n        }\n      }\n    }\n\n    &.left {\n      .score-controls {\n        border-top-left-radius: 4px;\n        border-bottom-left-radius: 4px;\n      }\n    }\n\n    &.right {\n      .score-controls {\n        border-top-right-radius: 4px;\n        border-bottom-right-radius: 4px;\n      }\n    }\n  }\n`;\n","import { grey, lime, red } from '@ant-design/colors';\nimport { faAngleRight, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Typography } from 'antd';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { timeFormat } from 'src/components/App';\nimport { GameEvent, readable } from 'src/models';\nimport styled from 'styled-components';\n\nconst { Title } = Typography;\n\ninterface LastEventsProps {\n  events: GameEvent[];\n  onDeleteEvent: (event: GameEvent) => void;\n}\n\nexport const LastEvents: React.FC<LastEventsProps> = (props: LastEventsProps): JSX.Element => {\n  const eventsToDisplay = props.events.slice(Math.max(props.events.length - 10, 1)).reverse();\n\n  return (\n    <StyledLastEvents>\n      <Title level={4}>10 derniers évènements</Title>\n      <div className=\"eventBag\">\n        {eventsToDisplay.map((e, index) => (\n          <div className={e.positive ? 'event positive' : 'event negative'} key={index}>\n            <div className=\"text\">\n              <span className=\"player\">\n                {e.player.name} ({dayjs(e.at).format(timeFormat)})\n              </span>\n              &nbsp;\n              <FontAwesomeIcon icon={faAngleRight} />\n              &nbsp;\n              <span className=\"type\">{readable(e.type)}</span>\n            </div>\n            <FontAwesomeIcon icon={faTimes} onClick={(): void => props.onDeleteEvent(e)} />\n          </div>\n        ))}\n      </div>\n    </StyledLastEvents>\n  );\n};\n\nconst StyledLastEvents = styled.div`\n  margin-top: 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  h4 {\n    color: ${grey[5]};\n  }\n\n  .eventBag {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    align-items: center;\n\n    .event {\n      padding: 6px;\n      margin-bottom: 4px;\n      width: fit-content;\n      border-radius: 4px;\n      background-color: ${lime[7]};\n      color: white;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n\n      &.negative {\n        background-color: ${red[6]};\n      }\n\n      svg[data-icon='times'] {\n        margin-left: 12px;\n        cursor: pointer;\n      }\n    }\n  }\n`;\n","import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Radio } from 'antd';\nimport React from 'react';\nimport { Game } from 'src/models/game';\nimport styled from 'styled-components';\n\ninterface SetSelectorProps {\n  game: Game;\n  selectedSet: number;\n  onSetChanged: (setNumber: number) => void;\n  onAddSet: () => void;\n}\n\nexport const SetSelector: React.FC<SetSelectorProps> = (props: SetSelectorProps): JSX.Element => {\n  return (\n    <StyledSetSelector>\n      <Radio.Group\n        onChange={(e): void => props.onSetChanged(e.target.value)}\n        value={props.selectedSet}\n        buttonStyle=\"solid\"\n        size=\"large\"\n      >\n        {props.game.sets.map((set, index) => (\n          <Radio.Button key={index} value={index}>\n            {set.team1Score}•{set.team2Score}\n          </Radio.Button>\n        ))}\n      </Radio.Group>\n\n      {props.game.sets.length < 5 && (\n        <Button type=\"primary\" onClick={props.onAddSet} size=\"large\">\n          <FontAwesomeIcon icon={faPlus} />\n        </Button>\n      )}\n    </StyledSetSelector>\n  );\n};\n\nconst StyledSetSelector = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  margin: 12px 0px;\n\n  .ant-radio-button-wrapper {\n    width: 48px;\n    padding: 0px 2px;\n    text-align: center;\n  }\n\n  button {\n    margin-left: 8px;\n  }\n`;\n","import { grey } from '@ant-design/colors';\nimport { Col, message, Row } from 'antd';\nimport dayjs from 'dayjs';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { dateFormat } from 'src/components/App';\nimport { Topbar } from 'src/components/Layout/Topbar';\nimport { ActionGrid } from 'src/components/Pages/ScoreBoard/ActionGrid';\nimport { LastEvents } from 'src/components/Pages/ScoreBoard/LastEvents';\nimport { ScoreEditor } from 'src/components/Pages/ScoreBoard/ScoreEditor';\nimport { SetSelector } from 'src/components/Pages/ScoreBoard/SetSelector';\nimport { GameEvent } from 'src/models/event';\nimport { MAX_SCORE, MIN_SCORE } from 'src/models/game';\nimport { buildUrl, Urls } from 'src/routing';\nimport {\n  addEvent,\n  addSet,\n  decrementTeam1,\n  decrementTeam2,\n  incrementTeam1,\n  incrementTeam2,\n  removeEvent,\n} from 'src/store/slices/gameSlice';\nimport { RootState } from 'src/store/store';\nimport styled from 'styled-components';\n\nexport const Game = (): JSX.Element => {\n  const { id } = useParams();\n  const history = useHistory();\n  const game = useSelector((state: RootState) => state.games.entities[id]);\n  const dispatch = useDispatch();\n  const [set, setSet] = useState(game ? game.sets.length - 1 : 0);\n\n  const handleIncrementT1 = (): void => {\n    if (game.sets[set].team1Score < MAX_SCORE) {\n      dispatch(incrementTeam1({ game, set }));\n    }\n  };\n\n  const handleIncrementT2 = (): void => {\n    if (game.sets[set].team2Score < MAX_SCORE) {\n      dispatch(incrementTeam2({ game, set }));\n    }\n  };\n\n  const handleDecrementT1 = (): void => {\n    if (game.sets[set].team1Score > MIN_SCORE) {\n      dispatch(decrementTeam1({ game, set }));\n    }\n  };\n\n  const handleDecrementT2 = (): void => {\n    if (game.sets[set].team2Score > MIN_SCORE) {\n      dispatch(decrementTeam2({ game, set }));\n    }\n  };\n\n  const handleAddAction = (event: GameEvent): void => {\n    dispatch(addEvent({ game, set, event }));\n    message.success('Evénement ajouté');\n  };\n\n  const handleDeleteEvent = (event: GameEvent): void => {\n    dispatch(removeEvent({ game, set, event }));\n    message.success('Evénement supprimé');\n  };\n\n  return (\n    <>\n      <Topbar />\n\n      {game && (\n        <StyledGame>\n          <Row>\n            <Col className=\"date\">{dayjs(game.at).format(dateFormat)}</Col>\n            <Col className=\"setSelector\">\n              <SetSelector\n                game={game}\n                selectedSet={set}\n                onSetChanged={(set: number): any => setSet(set)}\n                onAddSet={(): any => dispatch(addSet(game))}\n              />\n            </Col>\n            <Col className=\"teamNames\">\n              <span>{game.team1.name}</span>\n              <span>{game.team2.name}</span>\n            </Col>\n            <Col className=\"header\">\n              <ScoreEditor\n                t1Score={game.sets[set].team1Score}\n                t2Score={game.sets[set].team2Score}\n                onIncrementT1={handleIncrementT1}\n                onDecrementT1={handleDecrementT1}\n                onIncrementT2={handleIncrementT2}\n                onDecrementT2={handleDecrementT2}\n              />\n            </Col>\n            <Col\n              className=\"actions\"\n              xs={{ span: 22, offset: 1 }}\n              md={{ span: 18, offset: 3 }}\n              lg={{ span: 16, offset: 4 }}\n            >\n              <div className=\"links\">\n                <button\n                  className=\"link team\"\n                  onClick={(): void =>\n                    history.push(buildUrl(Urls.TEAM_MANAGEMENT, [{ parameter: 'id', value: game.id }]))\n                  }\n                >\n                  Gérer mon équipe\n                </button>\n                <button\n                  className=\"link stats\"\n                  onClick={(): void => history.push(buildUrl(Urls.GAME_STATS, [{ parameter: 'id', value: game.id }]))}\n                >\n                  Statistiques\n                </button>\n              </div>\n              <ActionGrid team={game.team1.players} onAddAction={handleAddAction} />\n\n              <LastEvents onDeleteEvent={handleDeleteEvent} events={game.sets[set].events} />\n            </Col>\n          </Row>\n        </StyledGame>\n      )}\n    </>\n  );\n};\n\nconst StyledGame = styled.div`\n  height: calc(100vh - 80px);\n\n  .date {\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    font-size: 24px;\n  }\n\n  .setSelector {\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    margin: 12px 0px;\n  }\n\n  .teamNames {\n    display: flex;\n    width: 100%;\n\n    span {\n      font-size: 40px;\n      flex: 0 0 50%;\n      padding: 0 8px;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      color: ${grey[5]};\n\n      &:nth-child(1) {\n        text-align: right;\n      }\n    }\n  }\n\n  .header {\n    display: flex;\n    width: 100%;\n    justify-content: center;\n  }\n\n  .actions .links {\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    margin-top: 8px;\n    margin-bottom: 8px;\n\n    button {\n      margin: 4px;\n    }\n  }\n`;\n","import { cyan } from '@ant-design/colors';\nimport React from 'react';\nimport { PolarAngleAxis, PolarGrid, PolarRadiusAxis, Radar, RadarChart, Tooltip } from 'recharts';\nimport { GameEvent, gameEvents, GameEventType, readable } from 'src/models';\n\ninterface PlayerRadarProps {\n  playerStats: any;\n}\n\nexport const PlayerRadar: React.FC<PlayerRadarProps> = (props: PlayerRadarProps): JSX.Element => {\n  const playerName = props.playerStats.key.split(':')[0];\n\n  const getStatPercentage = (events: GameEvent[]): number => {\n    return +((events.filter((s: GameEvent) => s.positive).length * 100) / events.length).toFixed(0) || 0;\n  };\n\n  const data = gameEvents\n    .filter((event) => event !== GameEventType.ACE)\n    .map((event) => {\n      return { event: readable(event, true), value: getStatPercentage(props.playerStats[event]) };\n    });\n\n  return (\n    <RadarChart outerRadius={90} width={280} height={300} data={data} margin={{ top: 8, right: 8, bottom: 8, left: 8 }}>\n      <text fontSize=\"18\" x=\"50%\" y=\"20\" dominantBaseline=\"middle\" textAnchor=\"middle\">\n        {playerName}\n      </text>\n      <PolarGrid />\n      <PolarAngleAxis dataKey=\"event\" />\n      <PolarRadiusAxis angle={30} domain={[0, 100]} tick={false} />\n      <Radar name={playerName} dataKey=\"value\" stroke={cyan[7]} fill={cyan[6]} fillOpacity={0.6} />\n      <Tooltip formatter={(value: number, name: string, props: any): string => value + '%'} />\n    </RadarChart>\n  );\n};\n","import { cyan } from '@ant-design/colors';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { CartesianGrid, Line, LineChart, LineType, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { timeFormat } from 'src/components/App';\nimport { Game, GameEventType, GameSet } from 'src/models';\n\ninterface SetTimeChartProps {\n  game: Game;\n  set: GameSet;\n  isFifthSet: boolean;\n}\n\nexport const SetTimeChart: React.FC<SetTimeChartProps> = (props: SetTimeChartProps) => {\n  const t1Data = props.set.events\n    .filter((e) => e.type === GameEventType.T1_SCORE_UPDATE)\n    .map((e) => {\n      return { time: dayjs(e.at).valueOf(), value: e.value };\n    });\n\n  const scoreEvents = props.set.events.filter((e) =>\n    [GameEventType.T1_SCORE_UPDATE, GameEventType.T2_SCORE_UPDATE].includes(e.type)\n  );\n\n  const data = [];\n  let t1LastScore = 0;\n  let t2LastScore = 0;\n  scoreEvents.forEach((e) => {\n    t1LastScore = e.type === GameEventType.T1_SCORE_UPDATE ? e.value : t1LastScore;\n    t2LastScore = e.type === GameEventType.T2_SCORE_UPDATE ? e.value : t2LastScore;\n    data.push({ time: dayjs(e.at).valueOf(), t1Score: t1LastScore, t2Score: t2LastScore });\n  });\n\n  const lineProps = {\n    type: 'stepAfter' as LineType,\n    strokeWidth: 3,\n    activeDot: { r: 4 },\n    dot: false,\n  };\n\n  const yDomain = props.isFifthSet ? [0, 15] : [0, 25];\n  const yTicks = props.isFifthSet ? [0, 5, 10, 15] : [0, 5, 10, 15, 20, 25];\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={240}>\n      <LineChart data={data} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          dataKey=\"time\"\n          name=\"Temps\"\n          domain={[t1Data[0].time, t1Data[t1Data.length - 1].time]}\n          tickFormatter={(timestamp: number): string => dayjs(timestamp).format(timeFormat)}\n          type=\"number\"\n        />\n        <YAxis domain={yDomain as any} ticks={yTicks} width={32} />\n        <Tooltip labelFormatter={(timestamp: number): string => dayjs(timestamp).format(timeFormat)} />\n\n        <Line {...lineProps} dataKey=\"t1Score\" name={props.game.team1.name} stroke={cyan[9]} />\n        <Line {...lineProps} dataKey=\"t2Score\" name={props.game.team2.name} stroke={cyan[6]} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n","import { cyan, lime, orange, red, yellow } from '@ant-design/colors';\nimport React from 'react';\nimport { GameEvent, gameEvents, GameEventType, GameSet, readable } from 'src/models';\nimport styled from 'styled-components';\n\ninterface TeamStatsProps {\n  events: GameEvent[];\n  sets: GameSet[];\n}\n\nexport const TeamStats: React.FC<TeamStatsProps> = (props: TeamStatsProps): JSX.Element => {\n  const getStatPercentage = (eventType: GameEventType): number => {\n    const events = props.events.filter((e) => e.type === eventType);\n\n    return +((events.filter((s: GameEvent) => s.positive).length * 100) / events.length).toFixed(0) || 0;\n  };\n\n  const percentages = {};\n  gameEvents\n    .filter((e) => e !== GameEventType.ACE)\n    .forEach((e) => {\n      percentages[e] = getStatPercentage(e);\n    });\n\n  const scored = props.sets.reduce((total, set) => total + set.team1Score, 0);\n  const lost = props.sets.reduce((total, set) => total + set.team2Score, 0);\n\n  return (\n    <StyledTeamStats>\n      <div className=\"points\">\n        <span className=\"eventType\">Points</span>\n        <span className=\"value\">\n          {scored}/{lost}\n        </span>\n      </div>\n      {gameEvents.map((e) => (\n        <div\n          key={e}\n          className={\n            percentages[e] < 25 ? 'xlow' : percentages[e] < 50 ? 'low' : percentages[e] < 75 ? 'high' : 'xhigh'\n          }\n        >\n          <span className=\"eventType\">{readable(e)}</span>\n          <span className=\"value\">\n            {e !== GameEventType.ACE\n              ? getStatPercentage(e) + '%'\n              : props.events.filter((e) => e.type === GameEventType.ACE).length}\n          </span>\n          {e !== GameEventType.ACE && (\n            <span className=\"numbers\">\n              {props.events.filter((t) => t.type === e && t.positive).length}/\n              {props.events.filter((t) => t.type === e).length}\n            </span>\n          )}\n        </div>\n      ))}\n    </StyledTeamStats>\n  );\n};\n\nconst StyledTeamStats = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  div {\n    width: 140px;\n    height: 160px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 8px 24px;\n    margin: 4px;\n\n    .eventType {\n      font-size: 24px;\n    }\n\n    .value {\n      font-size: 48px;\n    }\n\n    .numbers {\n      opacity: 0.8;\n    }\n\n    &.xlow {\n      background-color: ${red[4]};\n    }\n    &.low {\n      background-color: ${orange[4]};\n    }\n    &.high {\n      background-color: ${yellow[4]};\n    }\n    &.xhigh {\n      background-color: ${lime[4]};\n    }\n\n    &.points {\n      background-color: ${cyan[6]};\n\n      .value {\n        font-size: 36px;\n      }\n    }\n  }\n`;\n","import { faStar } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { GameEvent, GameEventType } from 'src/models';\nimport styled from 'styled-components';\n\ninterface StatCellProps {\n  events: any;\n  type: GameEventType;\n  percentage: number;\n}\n\nexport const StatCell: React.FC<StatCellProps> = (props: StatCellProps): JSX.Element => {\n  return (\n    <StyledStatCell>\n      <div>\n        {props.type !== GameEventType.ACE\n          ? props.percentage +\n            '% (' +\n            props.events.filter((s: GameEvent) => s.positive).length +\n            '/' +\n            props.events.length +\n            ')'\n          : props.events.length}\n      </div>\n      {props.percentage > 90 && props.type !== GameEventType.ACE && <FontAwesomeIcon icon={faStar} />}\n    </StyledStatCell>\n  );\n};\n\nconst StyledStatCell = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  svg {\n    color: white;\n    margin-left: 4px;\n  }\n`;\n","/* eslint-disable react/display-name */\nimport { lime, orange, red, yellow } from '@ant-design/colors';\nimport { Table } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport React from 'react';\nimport { StatCell } from 'src/components/Pages/Stats/StatCell';\nimport { GameEvent, gameEvents, GameEventType, readable } from 'src/models';\nimport styled from 'styled-components';\n\ninterface TeamTableStatsProps {\n  playerStats: any;\n}\n\nexport const TeamTableStats: React.FC<TeamTableStatsProps> = (props: TeamTableStatsProps): JSX.Element => {\n  const columns: ColumnsType = [\n    {\n      title: '#',\n      className: 'fit-content',\n      render: (stat: any): string => stat.key.split(':')[1],\n      sorter: (a: any, b: any): number =>\n        parseInt(a.key.split(':')[1], 10) > parseInt(b.key.split(':')[1], 10) ? 1 : -1,\n    },\n    {\n      title: 'Nom',\n      render: (stat: any): string => stat.key.split(':')[0],\n      sorter: (a: any, b: any): number => a.key.split(':')[0].localeCompare(b.key.split(':')[0]),\n    },\n  ];\n\n  const getStatPercentage = (events: GameEvent[]): number => {\n    return +((events.filter((s: GameEvent) => s.positive).length * 100) / events.length).toFixed(0) || 0;\n  };\n\n  const getPerformanceClass = (events: GameEvent[]): string => {\n    const p = getStatPercentage(events);\n    return events.length === 0 ? 'nodata' : p < 25 ? 'xlow' : p < 50 ? 'low' : p < 75 ? 'high' : 'xhigh';\n  };\n\n  gameEvents.forEach((eventType) => {\n    columns.push({\n      title: readable(eventType),\n      className: 'fit-content',\n      sorter: (a: any, b: any): number =>\n        eventType !== GameEventType.ACE\n          ? getStatPercentage(a[eventType]) > getStatPercentage(b[eventType])\n            ? 1\n            : -1\n          : a[eventType].length > b[eventType].length\n          ? -1\n          : 1,\n      render: (stats: any) => {\n        return {\n          props: {\n            className: getPerformanceClass(stats[eventType]) + (eventType === GameEventType.ACE ? ' nobg' : ''),\n          },\n          children: (\n            <StatCell events={stats[eventType]} type={eventType} percentage={getStatPercentage(stats[eventType])} />\n          ),\n        };\n      },\n    });\n  });\n\n  return (\n    <StyledTeamTableStats>\n      <Table bordered dataSource={props.playerStats} columns={columns} pagination={false} size=\"small\" />\n    </StyledTeamTableStats>\n  );\n};\n\nconst border = '8px solid ';\nconst borderRed = red[4];\nconst borderOrange = orange[4];\nconst borderYellow = yellow[4];\nconst borderLime = lime[4];\n\nconst StyledTeamTableStats = styled.div`\n  td,\n  th {\n    padding: 4px 4px !important;\n  }\n\n  .ant-table-thead > tr > th,\n  .ant-table-tbody > tr > td:nth-child(1) {\n    font-weight: 700;\n  }\n\n  .xlow {\n    border-left: ${border} ${borderRed};\n  }\n  .low {\n    border-left: ${border} ${borderOrange};\n  }\n  .high {\n    border-left: ${border} ${borderYellow};\n  }\n  .xhigh {\n    border-left: ${border} ${borderLime};\n  }\n\n  .nobg {\n    border-left: none;\n  }\n\n  .fit-content {\n    width: 1%;\n    white-space: nowrap;\n  }\n`;\n","import { Col, Row, Typography } from 'antd';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { dateFormat } from 'src/components/App';\nimport { Topbar } from 'src/components/Layout/Topbar';\nimport { PlayerRadar } from 'src/components/Pages/Stats/PlayerRadar';\nimport { SetTimeChart } from 'src/components/Pages/Stats/SetTimeChart';\nimport { TeamStats } from 'src/components/Pages/Stats/TeamStats';\nimport { TeamTableStats } from 'src/components/Pages/Stats/TeamTableStats';\nimport { gameEvents, getKey, getSetDuration, getTotalDuration, Player } from 'src/models';\nimport { RootState } from 'src/store/store';\nimport styled from 'styled-components';\n\nconst { Title } = Typography;\n\nexport const GameStats = (): JSX.Element => {\n  const { id } = useParams();\n  const game = useSelector((state: RootState) => state.games.entities[id]);\n\n  const allEvents = [...game.sets.map((set) => set.events.filter((event) => gameEvents.includes(event.type)))].flat();\n  const playerStats = game.team1.players.map((player: Player) => {\n    const s: any = { key: getKey(player) };\n\n    gameEvents.forEach((eventType) => {\n      s[eventType] = allEvents.filter(\n        (event) =>\n          event.player.name === player.name && event.player.number === player.number && event.type === eventType\n      );\n    });\n\n    return s;\n  });\n\n  return (\n    <>\n      <Topbar />\n      {game && (\n        <StyledGameStats>\n          <Row>\n            <Col>\n              <Title level={2}>\n                {game.team1.name} vs {game.team2.name}, le {dayjs(game.at).format(dateFormat)} (\n                {getTotalDuration(game) + ' minutes'})\n              </Title>\n            </Col>\n          </Row>\n\n          <Row gutter={16}>\n            <Col xs={24} lg={8}>\n              {game.sets.map((set, index) => (\n                <React.Fragment key={index}>\n                  <Title level={4}>\n                    Set {index + 1} : {set.team1Score}•{set.team2Score} ({getSetDuration(set) + ' minutes'})\n                  </Title>\n                  <SetTimeChart game={game} set={set} isFifthSet={index === 4} />\n                </React.Fragment>\n              ))}\n            </Col>\n\n            <Col xs={24} lg={16}>\n              <Title level={4}>Stats équipe</Title>\n              <TeamStats events={allEvents} sets={game.sets} />\n\n              <Title level={4}>Stats joueurs</Title>\n              <TeamTableStats playerStats={playerStats} />\n\n              <div className=\"radarWrapper\">\n                {game.team1.players.map((player) => (\n                  <PlayerRadar\n                    key={getKey(player)}\n                    playerStats={playerStats.find((stats) => stats.key === getKey(player))}\n                  />\n                ))}\n              </div>\n            </Col>\n          </Row>\n        </StyledGameStats>\n      )}\n    </>\n  );\n};\n\nconst StyledGameStats = styled.div`\n  height: calc(100vh - 80px);\n  padding: 8px;\n\n  .chartCol {\n    padding: 16px;\n  }\n\n  .radarWrapper {\n    margin-top: 12px;\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  h4 {\n    margin: 8px 0px;\n  }\n`;\n","/* eslint-disable react/display-name */\nimport { cyan, red } from '@ant-design/colors';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Col, Form, Input, InputNumber, message, Popconfirm, Row, Table, Tooltip, Typography } from 'antd';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { colLayout } from 'src/components/App';\nimport { Topbar } from 'src/components/Layout/Topbar';\nimport { Game } from 'src/models/game';\nimport { Player } from 'src/models/player';\nimport { buildUrl, Urls } from 'src/routing';\nimport { addPlayer, deletePlayer } from 'src/store/slices/gameSlice';\nimport { RootState } from 'src/store/store';\nimport styled from 'styled-components';\n\nconst { Title } = Typography;\n\ninterface TeamManagementProps {\n  game: Game;\n}\n\nexport const TeamManagement: React.FC<TeamManagementProps> = (): JSX.Element => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const game = useSelector((state: RootState) => state.games.entities[id]);\n  const [form] = Form.useForm();\n\n  const columns = [\n    { title: 'Nom', dataIndex: 'name', sorter: (a: Player, b: Player): number => a.name.localeCompare(b.name) },\n    { title: 'Numéro', dataIndex: 'number', sorter: (a: Player, b: Player): number => a.number - b.number },\n    {\n      key: 'actions',\n      className: 'actions fit-content',\n      render: (record: any): JSX.Element => (\n        <Tooltip key=\"delete\" title=\"supprimer cette personne\">\n          <Popconfirm\n            title={'sûr ?'}\n            onConfirm={(): any => dispatch(deletePlayer({ game: game, playerKey: record.key }))}\n            okText=\"Oui\"\n            cancelText=\"Non en fait\"\n          >\n            <FontAwesomeIcon icon={faTrash} />\n          </Popconfirm>\n        </Tooltip>\n      ),\n    },\n  ];\n\n  const handleAddPlayer = (player: Player): void => {\n    if (game.team1.players.some((p) => p.name === player.name && p.number === player.number)) {\n      message.error('Cette personne existe déjà');\n    } else {\n      dispatch(addPlayer({ game: game, player: player }));\n      form.resetFields();\n    }\n  };\n\n  return (\n    <>\n      <Topbar />\n\n      <div style={{ padding: 16 }}>\n        {game && (\n          <StyledTeamTable>\n            <Row gutter={16}>\n              <Col {...colLayout}>\n                <Title level={2}>Gérer mon équipe</Title>\n                <button\n                  className=\"link\"\n                  onClick={(): void => history.push(buildUrl(Urls.GAME, [{ parameter: 'id', value: game.id }]))}\n                >\n                  Retour au match\n                </button>\n\n                <Table\n                  size=\"small\"\n                  bordered={true}\n                  dataSource={game.team1.players.map((player) => {\n                    return { ...player, key: player.name + ':' + player.number };\n                  })}\n                  columns={columns}\n                  pagination={false}\n                ></Table>\n\n                <Form form={form} layout=\"horizontal\" onFinish={handleAddPlayer}>\n                  <Form.Item\n                    name=\"name\"\n                    label=\"Nom\"\n                    rules={[{ required: true, message: 'requis' }]}\n                    validateTrigger={['onChange', 'onBlur']}\n                  >\n                    <Input placeholder=\"nouveau joueur\" />\n                  </Form.Item>\n\n                  <Form.Item\n                    name=\"number\"\n                    label=\"Numéro\"\n                    rules={[{ required: true, message: 'requis' }]}\n                    validateTrigger={['onChange', 'onBlur']}\n                  >\n                    <InputNumber />\n                  </Form.Item>\n\n                  <Form.Item className=\"button\">\n                    <Button type=\"primary\" htmlType=\"submit\">\n                      OK\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </Col>\n            </Row>\n          </StyledTeamTable>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst StyledTeamTable = styled.div`\n  button.link {\n    margin-bottom: 16px;\n  }\n\n  form {\n    margin-top: 24px;\n    margin-bottom: 24px;\n  }\n\n  .fit-content {\n    width: 1%;\n    white-space: nowrap;\n  }\n\n  .actions {\n    svg {\n      transition: 0.3s all;\n      cursor: pointer;\n\n      &:hover {\n        color: ${cyan[8]};\n      }\n\n      &[data-icon='trash']:hover {\n      color: ${red[5]};\n    }\n  }\n\n  .button .ant-form-item-control-input-content {\n    text-align: right;\n  }\n`;\n","import { GameList } from 'src/components/Pages/GameList/GameList';\nimport { Home } from 'src/components/Pages/Home/Home';\nimport { NewGame } from 'src/components/Pages/NewGame/NewGame';\nimport { Game } from 'src/components/Pages/ScoreBoard/Game';\nimport { GameStats } from 'src/components/Pages/Stats/GameStats';\nimport { TeamManagement } from 'src/components/Pages/TeamManagement/TeamManagement';\n\nexport interface RouteConfig {\n  path: string;\n  exact?: boolean;\n  component?: any;\n  redirectTo?: string;\n  routes?: RouteConfig[];\n}\n\nexport interface MenuElement {\n  path?: string;\n  textKey?: string;\n  icon?: JSX.Element;\n  weight?: number;\n  children?: MenuElement[];\n}\n\nexport const Urls = {\n  HOME: '/home',\n  NEW_GAME: '/new-game',\n  GAME_LIST: '/game-list',\n  GAME: '/game/:id',\n  GAME_STATS: '/game/:id/stats',\n  TEAM_MANAGEMENT: '/game/:id/team',\n  DEFAULT: '/:anything_else',\n};\n\nexport const routes: RouteConfig[] = [\n  {\n    path: Urls.HOME,\n    exact: true,\n    component: Home,\n  },\n  {\n    path: Urls.NEW_GAME,\n    exact: true,\n    component: NewGame,\n  },\n  {\n    path: Urls.GAME,\n    exact: true,\n    component: Game,\n  },\n  {\n    path: Urls.GAME_LIST,\n    exact: true,\n    component: GameList,\n  },\n  {\n    path: Urls.GAME_STATS,\n    exact: true,\n    component: GameStats,\n  },\n  {\n    path: Urls.TEAM_MANAGEMENT,\n    exact: true,\n    component: TeamManagement,\n  },\n  {\n    path: Urls.DEFAULT,\n    redirectTo: Urls.HOME,\n  },\n  {\n    path: '',\n    exact: true,\n    redirectTo: Urls.HOME,\n  },\n];\n\ninterface UrlParameter {\n  parameter: string;\n  value: any;\n}\n\nexport const buildUrl = (base: string, parameters: UrlParameter[]): string => {\n  parameters.map((param: UrlParameter) => {\n    base = base.replace(':' + param.parameter, param.value.toString());\n    return null;\n  });\n\n  return base;\n};\n","import React from 'react';\nimport { Redirect, Route, SwitchProps } from 'react-router-dom';\nimport { RouteConfig } from 'src/routing';\n\nexport const RouteAndSubRoute: React.FC<SwitchProps & RouteConfig> = (route) => {\n  if (route.redirectTo) {\n    return <Route path={route.path} render={(): any => <Redirect to={route.redirectTo as string} />} />;\n  }\n\n  return <Route path={route.path} render={(props: any): any => <route.component {...props} routes={route.routes} />} />;\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { RouteAndSubRoute, routes } from 'src/routing';\n\nexport const colLayout = { xs: { span: 24 }, md: { span: 18 }, lg: { span: 16 } };\nexport const timeFormat = 'HH[h]mm';\nexport const dateFormat = 'DD/MM/YYYY';\n\nexport const App = (): JSX.Element => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        {routes.map((route, index) => (\n          <RouteAndSubRoute key={index} {...route} />\n        ))}\n      </Switch>\n    </Router>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage';\n\nimport { gameSlice } from './slices/gameSlice';\n\nconst rootReducer = combineReducers({ games: gameSlice.reducer });\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst persistConfig = {\n  key: 'gkState',\n  storage: storage,\n  whitelist: ['games'],\n  stateReconciler: autoMergeLevel2,\n};\n\nconst pReducer = persistReducer<RootState>(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: pReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","import './styles/reset.css';\nimport 'antd/dist/antd.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { App } from 'src/components/App';\nimport * as serviceWorker from 'src/serviceWorker';\nimport { persistor, store } from 'src/store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}